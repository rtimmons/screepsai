# Ryan's Screeps Notes

## Activity Log

- 2016-11-17: Setup first spawn `FirstSpawn`

## Links

- https://screeps.com/a/#!/map?pos=65.5,-45.5

## Tasks

**tasks**.todo
- Convert existing roles to `DecoBuilder` OO model
- Give creep names indicating role, body, and instance#
- Prioritize things based on [`Room.energyAvailable`](http://support.screeps.com/hc/en-us/articles/203079011-Room#energyAvailable) and [`energyCapacityAvailable`](http://support.screeps.com/hc/en-us/articles/203079011-Room#energyCapacityAvailable).
- Automatically create roads from source to spawn and RommController
- Prioritize delivering energy to spawns over construction
- Any way to avoid losing energy when transferring a full creep to a spawn with only 1 capacity?
- Some sort of automated testing?
- Change `bodyType` based on room energy
- Realtime inspection utils
- Better prioritize what to spawn
	- Something to switch roles?


```javascript
Game.spawns['Spawn1'].createCreep( [WORK,WORK,WORK,WORK,CARRY,MOVE,MOVE],
    'HarvesterBig',
    { role: 'harvester' } );
```

Investigations.todo
- path finding (store in memory?)
- FSM for given role & state => action

Ideas.todo
- Roles just different priorities?


## Console Commands

```javascript
Game.spawns['Spawn1'].createCreep(
[
        WORK,
        WORK,
        MOVE,MOVE,
        CARRY,CARRY,
        CARRY,CARRY,
        CARRY,
      ], 
        undefined,
        {role: 'harvester'}
      );
```


```javascript
// https://screeps.com/a/#!/sim/tutorial/3
Game.spawns['Spawn1'].createCreep( [WORK, CARRY, MOVE], 'Builder1',
    { role: 'builder' } );

Game.spawns['Spawn1'].createCreep( [WORK, CARRY, MOVE], undefined,
    { role: 'harvester' } );

Game.spawns['Spawn1'].createCreep( [WORK, CARRY, MOVE], 'Upgrader1' );

Game.creeps['Harvester1'].memory.role = 'harvester';
Game.creeps['Upgrader1'].memory.role = 'upgrader';

// turn everybody into harvesters in times of creep shortage
for (var i in Game.creeps) { Game.creeps[i].memory.role = 'harvester'; }


var n = 0;
for (var i in Game.creeps) { 
    if ( Game.creeps[i].memory.role == 'builder' ) { continue; }
	Game.creeps[i].memory.role = 'builder'; 
	if (n++ >= 5) { break; }
}

var n = 0;
for (var i in Game.creeps) { 
    if ( Game.creeps[i].memory.role == 'harvester' ) { continue; }
	Game.creeps[i].memory.role = 'harvester'; 
	if (n++ >= 2) { break; }
}


var n = 0;
for (var i in Game.creeps) { 
    if ( Game.creeps[i].memory.role == 'harvester' ) { continue; }
	Game.creeps[i].memory.role = 'builder'; 
	if (n++ >= 5) { break; }
}
var n = 0;
for (var i in Game.creeps) { 
    if ( Game.creeps[i].memory.role == 'harvester' || Game.creeps[i].memory.role != 'upgrader' ) { continue; }
	Game.creeps[i].memory.role = 'harvester'; 
	if (n++ >= 2) { break; }
}


var n = 0;
for(var i in Game.creeps) {
  if ( Game.creeps[i].memory.role == 'builder' ) {
      Game.creeps[i].suicide();
      if ( ++n >= 5 ) { break; }
  }
}

for (var k in Game.constructionSites) {
  var s = Game.constructionSites[k];
  s.remove();
}

for (var i in Game.creeps) { 
    if ( Game.creeps[i].)
    Game.creeps[i].memory.role = 'upgrader';
}

```